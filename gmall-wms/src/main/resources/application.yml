server:
  port: 18083 # 服务端口号
spring:
  cloud:
    nacos:
      discovery: # 注册中心配置
        server-addr: 192.168.0.101:8848 # nacos 注册中心地址
    sentinel: # 限流配置
      transport:
        dashboard: 192.168.0.101:8080 # sentinel 客户端地址
        port: 8719 # 服务与 dashboard 进行交互的端口
  zipkin: # 链路追踪配置
    base-url: http://192.168.0.101:9411 # zipkin 地址
    discovery-client-enabled: false # 是否监控 zipkin 本身的请求
    sender:
      type: web # 链路数据以什么方式返送给 zipkin. web 使用 http 的形式发送
  sleuth: # 采集率配置
    sampler:
      probability: 1 # 采集率, 默认是 百分之10 生产时使用, 开发应该设置为 1 采集全部请求
  datasource: # MySQL
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.0.101:3306/guli_wms?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=Asia/Shanghai # 连接协议
    username: root
    password: root
  redis: # Redis
    host: 192.168.0.101
    port: 6379
  rabbitmq:
    host: 192.168.0.101
    port: 5672
    virtual-host: /admin # 虚拟主机
    username: admin
    password: admin
    listener:
      # 消费者类型. direct 不能多线程消费
      type: simple # simple 另开线程获取消息、direct 直接使用消费者主线程获取消息
      simple:
        # 设置能者多劳(公平分发): rabbitmq 默认是采用轮训的方式分配消息当有多个消费者接入时，消息的分配模式是一个消费者分配一条，直至消息消费完成.
        prefetch: 1 # 消费完一条消息后才回去 队列获取下一条消息
        concurrency: 8 # 数值取决于 cpu 核数. 此时一个连接会有 8 个信道. 充分发挥每个cpu的性能
        # ack 即是确认字符，在数据通信中，接收站发给发送站的一种传输类控制字符。表示发来的数据已确认接收无误
        # 生产者 -> mq -> 消费者. 站在的角度不同 接收站与消费站也不同
        # 消费者确认模式:
        #   nome - 不确认模式, 只要消费者获取了消息, 消息即被确认. 如果程序发生异常等 消息即被丢失
        #   auto - 自动确认, 只要消费者在消费过程中没有异常即被确认, 如果出现异常会无限重试(如果有几条消息发生异常无限重试会耗费大量服务器资源)
        #   manual 手动确认模式, 在消费者最后手动确认 可以 保证消息的安全性
        #
        #     channel.basicack 确认 / basicnack() 不确认 / basicreject() 拒绝消息
        acknowledge-mode: manual
    # 生产者确认类型
    #   none - 不确认模式
    #   simple - 同步阻塞方式确认, 性能不高(等到死为止, 并发不过百可以使用. 可靠性较高)
    #   correlated - 异步非阻塞方式确认, 性能较高
    publisher-confirm-type: correlated
    # 确认消息是否到达队列
    publisher-returns: true
feign: # feign
  sentinel:
    enabled: true # 开启 feign 的 sentinel 功能
mybatis-plus: # mybatis-plus 配置
  mapper-locations: classpath:mapper/wms/**/*.xml # 映射文件地址 classpath 就是 resources
  type-aliases-package: com.atguigu.gmall.wms.entity # 别名包扫描
  global-config:
    db-config:
      id-type: auto # id 策略, 生产应该使用分布式 id. auto 数据库自增
logging: # 查看执行 SQL
  level: # 级别
    com.atguigu.gmall.wms: debug # debug 模式